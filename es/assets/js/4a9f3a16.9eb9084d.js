"use strict";(self.webpackChunkjamswiki=self.webpackChunkjamswiki||[]).push([[35],{3905:function(e,t,a){a.d(t,{Zo:function(){return m},kt:function(){return d}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),c=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),p=c(a),d=n,f=p["".concat(s,".").concat(d)]||p[d]||u[d]||o;return a?r.createElement(f,i(i({ref:t},m),{},{components:a})):r.createElement(f,i({ref:t},m))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var c=2;c<o;c++)i[c]=a[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}p.displayName="MDXCreateElement"},8916:function(e,t,a){a.r(t),a.d(t,{assets:function(){return k},contentTitle:function(){return d},default:function(){return h},frontMatter:function(){return p},metadata:function(){return f},toc:function(){return y}});var r=a(7462),n=a(3366),o=a(7294),i=a(3905),l=["title","titleId"];function s(){return s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])}return e},s.apply(this,arguments)}function c(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var m=function(e){var t=e.title,a=e.titleId,r=c(e,l);return o.createElement("svg",s({width:310.274,height:250.602,viewBox:"0 0 82.093 66.305",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":a},r),t?o.createElement("title",{id:a},t):null,o.createElement("path",{style:{fill:"none",stroke:"#000",strokeWidth:.264999,strokeLinecap:"butt",strokeLinejoin:"miter"},d:"M.17.19h81.828v66.04H.17z",transform:"translate(-.038 -.058)"}),o.createElement("path",{style:{fill:"none",stroke:"#000",strokeWidth:.264999,strokeLinecap:"butt",strokeLinejoin:"miter"},d:"M35.594 4.63h42.73v59.399h-42.73z",transform:"translate(-.038 -.058)"}),o.createElement("path",{style:{fill:"none",stroke:"#000",strokeWidth:.264999,strokeLinecap:"butt",strokeLinejoin:"miter"},d:"M39.1 34.264h35.719v26.061H39.1z",transform:"translate(-.038 -.058)"}),o.createElement("path",{style:{fill:"#e6e6e6",stroke:"#000",strokeWidth:.1325,strokeLinecap:"butt",strokeLinejoin:"miter"},d:"M.33 33.205V.397H81.823V66.014H.331Zm78.185 1.125V4.498H35.388V64.16H78.515z",transform:"translate(-.038 -.058)"}),o.createElement("path",{style:{fill:"#ccc",stroke:"#000",strokeWidth:.1325,strokeLinecap:"butt",strokeLinejoin:"miter"},d:"M35.785 34.33V4.762h42.333V63.897H35.785Zm39.29 12.964V34.131H38.96v26.326h36.116z",transform:"translate(-.038 -.058)"}),o.createElement("path",{style:{fill:"#b3b3b3",stroke:"#000",strokeWidth:.1325,strokeLinecap:"butt",strokeLinejoin:"miter"},d:"M39.357 47.294V34.396h35.322V60.193H39.357Z",transform:"translate(-.038 -.058)"}),o.createElement("g",{style:{display:"inline"}},o.createElement("text",{xmlSpace:"preserve",style:{fontStyle:"normal",fontVariant:"normal",fontWeight:400,fontStretch:"normal",fontSize:"5.64444px",lineHeight:1.25,fontFamily:"sans-serif",InkscapeFontSpecification:"'sans-serif, Normal'",fontVariantLigatures:"normal",fontVariantCaps:"normal",fontVariantNumeric:"normal",fontVariantEastAsian:"normal",fill:"#000",fillOpacity:1,stroke:"none",strokeWidth:.264583},x:3.93,y:10.018,transform:"translate(-.038 -.058)"},o.createElement("tspan",{style:{fontStyle:"normal",fontVariant:"normal",fontWeight:400,fontStretch:"normal",fontSize:"5.64444px",fontFamily:"sans-serif",InkscapeFontSpecification:"'sans-serif, Normal'",fontVariantLigatures:"normal",fontVariantCaps:"normal",fontVariantNumeric:"normal",fontVariantEastAsian:"normal",strokeWidth:.264583},x:3.93,y:10.018},"L1 Cache")),o.createElement("text",{xmlSpace:"preserve",style:{fontStyle:"normal",fontVariant:"normal",fontWeight:400,fontStretch:"normal",fontSize:"5.64444px",lineHeight:1.25,fontFamily:"sans-serif",InkscapeFontSpecification:"'sans-serif, Normal'",fontVariantLigatures:"normal",fontVariantCaps:"normal",fontVariantNumeric:"normal",fontVariantEastAsian:"normal",fill:"#000",fillOpacity:1,stroke:"none",strokeWidth:.264583},x:43.853,y:12.928,transform:"translate(-.038 -.058)"},o.createElement("tspan",{style:{fontStyle:"normal",fontVariant:"normal",fontWeight:400,fontStretch:"normal",fontSize:"5.64444px",fontFamily:"sans-serif",InkscapeFontSpecification:"'sans-serif, Normal'",fontVariantLigatures:"normal",fontVariantCaps:"normal",fontVariantNumeric:"normal",fontVariantEastAsian:"normal",strokeWidth:.264583},x:43.853,y:12.928},"L2 Cache")),o.createElement("text",{xmlSpace:"preserve",style:{fontStyle:"normal",fontVariant:"normal",fontWeight:400,fontStretch:"normal",fontSize:"5.64444px",lineHeight:1.25,fontFamily:"sans-serif",InkscapeFontSpecification:"'sans-serif, Normal'",fontVariantLigatures:"normal",fontVariantCaps:"normal",fontVariantNumeric:"normal",fontVariantEastAsian:"normal",fill:"#000",fillOpacity:1,stroke:"none",strokeWidth:.264583},x:45.434,y:48.778,transform:"translate(-.038 -.058)"},o.createElement("tspan",{style:{fontStyle:"normal",fontVariant:"normal",fontWeight:400,fontStretch:"normal",fontSize:"5.64444px",fontFamily:"sans-serif",InkscapeFontSpecification:"'sans-serif, Normal'",fontVariantLigatures:"normal",fontVariantCaps:"normal",fontVariantNumeric:"normal",fontVariantEastAsian:"normal",strokeWidth:.264583},x:45.434,y:48.778},"Memory"))))},u=["components"],p={sidebar_position:7},d="Memoria",f={unversionedId:"architecture/memory",id:"architecture/memory",title:"Memoria",description:"La memoria es la parte del simulador donde se guardan los datos y las instrucciones de una aplicaci\xf3n.",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/architecture/memory.mdx",sourceDirName:"architecture",slug:"/architecture/memory",permalink:"/es/docs/architecture/memory",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/architecture/memory.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"docsSidebar",previous:{title:"Directivas",permalink:"/es/docs/architecture/directives"}},k={},y=[{value:"Estructura de la memoria",id:"estructura-de-la-memoria",level:2},{value:"Implementaci\xf3n de la memoria",id:"implementaci\xf3n-de-la-memoria",level:2},{value:"Cach\xe9s",id:"cach\xe9s",level:2},{value:"Constructores",id:"constructores",level:2}],g={toc:y};function h(e){var t=e.components,a=(0,n.Z)(e,u);return(0,i.kt)("wrapper",(0,r.Z)({},g,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"memoria"},"Memoria"),(0,i.kt)("p",null,"La memoria es la parte del simulador donde se guardan los datos y las instrucciones de una aplicaci\xf3n."),(0,i.kt)("h2",{id:"estructura-de-la-memoria"},"Estructura de la memoria"),(0,i.kt)("p",null,"La memoria de la arquitectura MIPS32 es una memoria de 4 GB (2",(0,i.kt)("sup",null,"32")," bytes) separada en las siguientes secciones:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Secci\xf3n"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Tipo"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Primera direcci\xf3n"),(0,i.kt)("th",{parentName:"tr",align:null},"Uso"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"Reserved"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Kernel Level"),(0,i.kt)("td",{parentName:"tr",align:"center"},"0xFFFF0000"),(0,i.kt)("td",{parentName:"tr",align:null},"Secci\xf3n usada para leer y escribir de componentes.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"Kernel Data"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Kernel Level"),(0,i.kt)("td",{parentName:"tr",align:"center"},"0x90000000"),(0,i.kt)("td",{parentName:"tr",align:null},"Datos est\xe1ticos del ",(0,i.kt)("em",{parentName:"td"},"kernel"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"Kernel Text"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Kernel Level"),(0,i.kt)("td",{parentName:"tr",align:"center"},"0x80000000"),(0,i.kt)("td",{parentName:"tr",align:null},"Instrucciones del ",(0,i.kt)("em",{parentName:"td"},"kernel"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"Stack Segment"),(0,i.kt)("td",{parentName:"tr",align:"center"},"User Level"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u2193"),(0,i.kt)("td",{parentName:"tr",align:null},"Pila")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"Dynamic Data"),(0,i.kt)("td",{parentName:"tr",align:"center"},"User Level"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u2191"),(0,i.kt)("td",{parentName:"tr",align:null},"Memoria reservadas en tiempo de ejecuci\xf3n.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"Static Data"),(0,i.kt)("td",{parentName:"tr",align:"center"},"User Level"),(0,i.kt)("td",{parentName:"tr",align:"center"},"0x10000000"),(0,i.kt)("td",{parentName:"tr",align:null},"Datos est\xe1ticos generados al por las directivas al ensamblar.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"Text Segment"),(0,i.kt)("td",{parentName:"tr",align:"center"},"User Level"),(0,i.kt)("td",{parentName:"tr",align:"center"},"0x04000000"),(0,i.kt)("td",{parentName:"tr",align:null},"Instrucciones del programa.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"Reserved"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Kernel Level"),(0,i.kt)("td",{parentName:"tr",align:"center"},"0x00000000"),(0,i.kt)("td",{parentName:"tr",align:null},"Usado por el sistema operativo. Sin uso en el simulador.")))),(0,i.kt)("h2",{id:"implementaci\xf3n-de-la-memoria"},"Implementaci\xf3n de la memoria"),(0,i.kt)("p",null,"Reservar 4 GB de memoria para cada simulaci\xf3n no es una buena idea: ocupar\xeda una gran parte de la RAM de un computador y\nla gran mayor\xeda no se usar\xeda. Para evitar este problema existen varias t\xe9cnicas para la implementaci\xf3n de la memoria:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Limitar la memoria de cada secci\xf3n."),(0,i.kt)("li",{parentName:"ul"},"Partir las secciones en sub-secciones.")),(0,i.kt)("p",null,"JAMS implementa la segunda opci\xf3n: cada secci\xf3n de memoria es separada en bloques de 4 KB. Estas secciones no ser\xe1n\nreservadas en memoria hasta que sean necesarias."),(0,i.kt)("p",null,"Con esta implementaci\xf3n, se reserva un array inicial de 2",(0,i.kt)("sup",null,"22")," (2",(0,i.kt)("sup",null,"32")," / 2",(0,i.kt)("sup",null,"12"),") entradas, lo\nque equivaldr\xeda a unos simples 8 MB. Seg\xfan el uso de la memoria dentro del simulador, se ir\xe1n reservando trozos de 4 KB."),(0,i.kt)("h2",{id:"cach\xe9s"},"Cach\xe9s"),(0,i.kt)("p",null,"Las cach\xe9s son memorias m\xe1s peque\xf1as y m\xe1s r\xe1pidas que est\xe1n situadas entre la memoria y el procesador. Los computadores\nactuales suelen tener varios niveles de cach\xe9, actuando unas sobre otras."),(0,i.kt)("p",null,"En JAMS, las memorias funcionan de manera muy similar."),(0,i.kt)("center",null,(0,i.kt)(m,{mdxType:"Caches"})),(0,i.kt)("p",null,"Tanto las cach\xe9s como las memorias implementan la interfaz ",(0,i.kt)("inlineCode",{parentName:"p"},"Memory"),". Esta interfaz define los m\xe9todos de lectura y\nescritura. Cuando un simulador necesita leer o escribir en la memoria, llama al m\xe9todo correspondiente en su memoria."),(0,i.kt)("p",null,"Lo que no sabe el simulador es que su memoria puede ser una cach\xe9 con una referencia a otra memoria. Cuando una\ncach\xe9 es invocada en una operaci\xf3n de lectura o escritura, es ella la que gestiona la operaci\xf3n y, si es necesario,\naccede a la memoria que tiene como referencia."),(0,i.kt)("p",null,"Con esta sencilla arquitectura se genera una jerarqu\xeda de memorias muy similar a la que encontramos en computadores\nreales."),(0,i.kt)("h2",{id:"constructores"},"Constructores"),(0,i.kt)("p",null,"Para permitir crear nuevos tipos de cach\xe9s y memorias, JAMS tiene dos ",(0,i.kt)("a",{parentName:"p",href:"managers"},"gestores"),"\nque guardan constructores de cach\xe9s y de memorias. Estos gestores son ",(0,i.kt)("inlineCode",{parentName:"p"},"MemoryBuilderManager")," y ",(0,i.kt)("inlineCode",{parentName:"p"},"CacheBuilderManager"),",\nlos cuales gestionan elementos de tipo ",(0,i.kt)("inlineCode",{parentName:"p"},"MemoryBuilder")," y ",(0,i.kt)("inlineCode",{parentName:"p"},"CacheBuilder")," respectivamente."),(0,i.kt)("p",null,"La clase ",(0,i.kt)("inlineCode",{parentName:"p"},"MemoryBuilder")," es muy sencilla, ya que contiene un \xfanico m\xe9todo que permite crear una nueva memoria."),(0,i.kt)("p",null,"La clase ",(0,i.kt)("inlineCode",{parentName:"p"},"CacheBuilder")," es m\xe1s compleja: tambi\xe9n define propiedades de la cach\xe9. En el gestor estar\xe1 registrado\nel constructor con los par\xe1metros por defecto, mientras que las\n",(0,i.kt)("a",{parentName:"p",href:"../tutorial-basics/configurations"},"configuraciones de los proyectos")," almacenar\xe1n copias con los par\xe1metros deseados."))}h.isMDXComponent=!0}}]);