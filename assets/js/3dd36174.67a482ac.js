"use strict";(self.webpackChunkjamswiki=self.webpackChunkjamswiki||[]).push([[395],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),m=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=m(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=m(n),d=a,h=u["".concat(s,".").concat(d)]||u[d]||p[d]||i;return n?r.createElement(h,o(o({ref:t},c),{},{components:n})):r.createElement(h,o({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var m=2;m<i;m++)o[m]=n[m];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5179:function(e,t,n){n.r(t),n.d(t,{assets:function(){return f},contentTitle:function(){return d},default:function(){return g},frontMatter:function(){return u},metadata:function(){return h},toc:function(){return y}});var r=n(7462),a=n(3366),i=n(7294),o=n(3905),l=["title","titleId"];function s(){return s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},s.apply(this,arguments)}function m(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=function(e){var t=e.title,n=e.titleId,r=m(e,l);return i.createElement("svg",s({width:310.274,height:250.602,viewBox:"0 0 82.093 66.305",xmlns:"http://www.w3.org/2000/svg","aria-labelledby":n},r),t?i.createElement("title",{id:n},t):null,i.createElement("path",{style:{fill:"none",stroke:"#000",strokeWidth:.264999,strokeLinecap:"butt",strokeLinejoin:"miter"},d:"M.17.19h81.828v66.04H.17z",transform:"translate(-.038 -.058)"}),i.createElement("path",{style:{fill:"none",stroke:"#000",strokeWidth:.264999,strokeLinecap:"butt",strokeLinejoin:"miter"},d:"M35.594 4.63h42.73v59.399h-42.73z",transform:"translate(-.038 -.058)"}),i.createElement("path",{style:{fill:"none",stroke:"#000",strokeWidth:.264999,strokeLinecap:"butt",strokeLinejoin:"miter"},d:"M39.1 34.264h35.719v26.061H39.1z",transform:"translate(-.038 -.058)"}),i.createElement("path",{style:{fill:"#e6e6e6",stroke:"#000",strokeWidth:.1325,strokeLinecap:"butt",strokeLinejoin:"miter"},d:"M.33 33.205V.397H81.823V66.014H.331Zm78.185 1.125V4.498H35.388V64.16H78.515z",transform:"translate(-.038 -.058)"}),i.createElement("path",{style:{fill:"#ccc",stroke:"#000",strokeWidth:.1325,strokeLinecap:"butt",strokeLinejoin:"miter"},d:"M35.785 34.33V4.762h42.333V63.897H35.785Zm39.29 12.964V34.131H38.96v26.326h36.116z",transform:"translate(-.038 -.058)"}),i.createElement("path",{style:{fill:"#b3b3b3",stroke:"#000",strokeWidth:.1325,strokeLinecap:"butt",strokeLinejoin:"miter"},d:"M39.357 47.294V34.396h35.322V60.193H39.357Z",transform:"translate(-.038 -.058)"}),i.createElement("g",{style:{display:"inline"}},i.createElement("text",{xmlSpace:"preserve",style:{fontStyle:"normal",fontVariant:"normal",fontWeight:400,fontStretch:"normal",fontSize:"5.64444px",lineHeight:1.25,fontFamily:"sans-serif",InkscapeFontSpecification:"'sans-serif, Normal'",fontVariantLigatures:"normal",fontVariantCaps:"normal",fontVariantNumeric:"normal",fontVariantEastAsian:"normal",fill:"#000",fillOpacity:1,stroke:"none",strokeWidth:.264583},x:3.93,y:10.018,transform:"translate(-.038 -.058)"},i.createElement("tspan",{style:{fontStyle:"normal",fontVariant:"normal",fontWeight:400,fontStretch:"normal",fontSize:"5.64444px",fontFamily:"sans-serif",InkscapeFontSpecification:"'sans-serif, Normal'",fontVariantLigatures:"normal",fontVariantCaps:"normal",fontVariantNumeric:"normal",fontVariantEastAsian:"normal",strokeWidth:.264583},x:3.93,y:10.018},"L1 Cache")),i.createElement("text",{xmlSpace:"preserve",style:{fontStyle:"normal",fontVariant:"normal",fontWeight:400,fontStretch:"normal",fontSize:"5.64444px",lineHeight:1.25,fontFamily:"sans-serif",InkscapeFontSpecification:"'sans-serif, Normal'",fontVariantLigatures:"normal",fontVariantCaps:"normal",fontVariantNumeric:"normal",fontVariantEastAsian:"normal",fill:"#000",fillOpacity:1,stroke:"none",strokeWidth:.264583},x:43.853,y:12.928,transform:"translate(-.038 -.058)"},i.createElement("tspan",{style:{fontStyle:"normal",fontVariant:"normal",fontWeight:400,fontStretch:"normal",fontSize:"5.64444px",fontFamily:"sans-serif",InkscapeFontSpecification:"'sans-serif, Normal'",fontVariantLigatures:"normal",fontVariantCaps:"normal",fontVariantNumeric:"normal",fontVariantEastAsian:"normal",strokeWidth:.264583},x:43.853,y:12.928},"L2 Cache")),i.createElement("text",{xmlSpace:"preserve",style:{fontStyle:"normal",fontVariant:"normal",fontWeight:400,fontStretch:"normal",fontSize:"5.64444px",lineHeight:1.25,fontFamily:"sans-serif",InkscapeFontSpecification:"'sans-serif, Normal'",fontVariantLigatures:"normal",fontVariantCaps:"normal",fontVariantNumeric:"normal",fontVariantEastAsian:"normal",fill:"#000",fillOpacity:1,stroke:"none",strokeWidth:.264583},x:45.434,y:48.778,transform:"translate(-.038 -.058)"},i.createElement("tspan",{style:{fontStyle:"normal",fontVariant:"normal",fontWeight:400,fontStretch:"normal",fontSize:"5.64444px",fontFamily:"sans-serif",InkscapeFontSpecification:"'sans-serif, Normal'",fontVariantLigatures:"normal",fontVariantCaps:"normal",fontVariantNumeric:"normal",fontVariantEastAsian:"normal",strokeWidth:.264583},x:45.434,y:48.778},"Memory"))))},p=["components"],u={sidebar_position:7},d="Memory",h={unversionedId:"architecture/memory",id:"architecture/memory",title:"Memory",description:"The memory is the component of the simulator where an application's data and instructions are stored.",source:"@site/docs/architecture/memory.mdx",sourceDirName:"architecture",slug:"/architecture/memory",permalink:"/docs/architecture/memory",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/architecture/memory.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"docsSidebar",previous:{title:"Directives",permalink:"/docs/architecture/directives"},next:{title:"Languages",permalink:"/docs/architecture/languages"}},f={},y=[{value:"Memory&#39;s structure",id:"memorys-structure",level:2},{value:"Memory&#39;s implementation",id:"memorys-implementation",level:2},{value:"Caches",id:"caches",level:2},{value:"Builders",id:"builders",level:2}],k={toc:y};function g(e){var t=e.components,n=(0,a.Z)(e,p);return(0,o.kt)("wrapper",(0,r.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"memory"},"Memory"),(0,o.kt)("p",null,"The memory is the component of the simulator where an application's data and instructions are stored."),(0,o.kt)("h2",{id:"memorys-structure"},"Memory's structure"),(0,o.kt)("p",null,"The MIPS32's memory is a 4 GB (2",(0,o.kt)("sup",null,"32")," bytes) memory split in the following sections:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"center"},"Section"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,o.kt)("th",{parentName:"tr",align:"center"},"First address"),(0,o.kt)("th",{parentName:"tr",align:null},"Use"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"Reserved"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Kernel Level"),(0,o.kt)("td",{parentName:"tr",align:"center"},"0xFFFF0000"),(0,o.kt)("td",{parentName:"tr",align:null},"Used to read and write to components.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"Kernel Data"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Kernel Level"),(0,o.kt)("td",{parentName:"tr",align:"center"},"0x90000000"),(0,o.kt)("td",{parentName:"tr",align:null},"Kernel static data.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"Kernel Text"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Kernel Level"),(0,o.kt)("td",{parentName:"tr",align:"center"},"0x80000000"),(0,o.kt)("td",{parentName:"tr",align:null},"Kernel instructions")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"Stack Segment"),(0,o.kt)("td",{parentName:"tr",align:"center"},"User Level"),(0,o.kt)("td",{parentName:"tr",align:"center"},"\u2193"),(0,o.kt)("td",{parentName:"tr",align:null},"Stack")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"Dynamic Data"),(0,o.kt)("td",{parentName:"tr",align:"center"},"User Level"),(0,o.kt)("td",{parentName:"tr",align:"center"},"\u2191"),(0,o.kt)("td",{parentName:"tr",align:null},"Runtime-allocated memory.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"Static Data"),(0,o.kt)("td",{parentName:"tr",align:"center"},"User Level"),(0,o.kt)("td",{parentName:"tr",align:"center"},"0x10000000"),(0,o.kt)("td",{parentName:"tr",align:null},"Static data generated by directives on assembly.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"Text Segment"),(0,o.kt)("td",{parentName:"tr",align:"center"},"User Level"),(0,o.kt)("td",{parentName:"tr",align:"center"},"0x04000000"),(0,o.kt)("td",{parentName:"tr",align:null},"Application instructions.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"Reserved"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Kernel Level"),(0,o.kt)("td",{parentName:"tr",align:"center"},"0x00000000"),(0,o.kt)("td",{parentName:"tr",align:null},"Reserved for the operating system. It has no use in the simulator.")))),(0,o.kt)("h2",{id:"memorys-implementation"},"Memory's implementation"),(0,o.kt)("p",null,"Allocate 4 GB for each simulator is not a good idea: it will allocate a big chunk of a computer's RAM, and the big part\nof the reserved memory won't be used.\nTo avoid this problem, there are several techniques used to implemente the memory:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Limit the memory of each section."),(0,o.kt)("li",{parentName:"ul"},"Split each section into subsections.")),(0,o.kt)("p",null,"JAMS uses the second technique: each memory section is split into 4 KB chunks. These subsecciones won't be allocated\nuntil they're required by the simulator."),(0,o.kt)("p",null,"With this implementation, an array with 2",(0,o.kt)("sup",null,"22")," (2",(0,o.kt)("sup",null,"32")," / 2",(0,o.kt)("sup",null,"12"),") elements is allocated at the\nstart of the simulation. This is equivalent to 8 MB. The memory will reserve chunks when needed."),(0,o.kt)("h2",{id:"caches"},"Caches"),(0,o.kt)("p",null,"Caches are smaller and faster memories located between the memory and the CPU. Computers nowadays may have several\ncache levels, acting one over another."),(0,o.kt)("p",null,"In JAMS, memories behave in a very similar way:"),(0,o.kt)("center",null,(0,o.kt)(c,{mdxType:"Caches"})),(0,o.kt)("p",null,"Both caches and memories implemente the ",(0,o.kt)("inlineCode",{parentName:"p"},"Memory")," interface. This interface defines read and write methods. When a\nsimulator has to read or write into the memory, it invokes the corresponding method in its memory."),(0,o.kt)("p",null,"What the simulator doesn't know is that its memory can be a cache with a reference to another memory. When the cache\nis invoked in a write/read operation, it is the cache the one that manages the operation and, if it is required, it\ninvokes its referenced memory."),(0,o.kt)("p",null,"With this simple architecture, a memory hierarchy generated. This hierarchy is very similar to the ones found in real\ncomputers."),(0,o.kt)("h2",{id:"builders"},"Builders"),(0,o.kt)("p",null,"To allow plugins to provide new cache and memory types, JAMS defines two ",(0,o.kt)("a",{parentName:"p",href:"managers"},"managers")," that store cache\nand memory builders. These managers are the ",(0,o.kt)("inlineCode",{parentName:"p"},"MemoryBuilderManager")," and the ",(0,o.kt)("inlineCode",{parentName:"p"},"CacheBuilderManager"),". They store\n",(0,o.kt)("inlineCode",{parentName:"p"},"MemoryBuilder")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"CacheBuilder"),", respectively."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"MemoryBuilder")," class is very simple: it contains a method use to create new memories of its type."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"CacheBuilder")," class is more complex: it also defines cache properties. The manager has registered the version\nof the ",(0,o.kt)("inlineCode",{parentName:"p"},"CacheBuilder")," with the default properties, while ",(0,o.kt)("a",{parentName:"p",href:"../tutorial-basics/configurations"},"configurations")," store\ncopies with the desired properties."))}g.isMDXComponent=!0}}]);